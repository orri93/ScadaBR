/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.org.scadabr.rt.event.type;

/**
 *
 * @author aploese
 */
public enum EventSources {

    /**
     * Data points raise events with point event detectors. All point event
     * detectors are stored in a single table, so that the id of the detector is
     * a unique identifier for the type. Thus, the detector's id can be (and is)
     * used as the event type id.
     */
    DATA_POINT,
    /**
     * Data sources raise events internally for their own reasons (for example
     * no response from the external system) or if a point locator failed. Data
     * source error types are enumerated in the data sources themselves. So, the
     * unique identifier of a data source event type is the combination of the
     * the data source id and the data source error type.
     */
    DATA_SOURCE,
    /**
     * The system itself is also, of course, a producer of events (for example
     * low disk space). The types of system events are enumerated in the
     * SystemEvents class. The system event type is the unique identifier for
     * system events.
     */
    SYSTEM,
    /**
     * Compound detector event types have their unique identifiers generated by
     * the database. These detectors listen to point event detectors and
     * scheduled events and raise events according to their configured logical
     * statement.
     */
    COMPOUND,
    /**
     * Scheduled event types have their unique identifiers generated by the
     * database. Scheduled events are raised by the scheduler at instants
     * defined by the user.
     */
    SCHEDULED,
    /**
     * Publishers raise events internally for their own reasons, including
     * general publishing failures or failures in individual points. Error types
     * are enumerated in the publishers themselves. So, the unique identifier of
     * a publisher event type is the combination of the publisher id and the
     * publisher error type.
     */
    PUBLISHER,
    /**
     * Audit events are created when a user makes a change that needs to be
     * acknowledged by other users. Such changes include modifications to point
     * event detectors, scheduled events, compound events, data sources, data
     * points, and point links.
     */
    AUDIT,
    /**
     * Maintenance events are created when maintenance mode becomes active. See
     * MaintenanceVO for more information.
     */
    MAINTENANCE;

}
